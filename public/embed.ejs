<!DOCTYPE HTML>
<html>

<head>
    <link href="/css/video-js.min.css" rel="stylesheet">
    <link href="/css/videojs-chromecast.css" rel="stylesheet">
    <link href="/css/videojs.logobrand.css" rel="stylesheet">
    <link href="/css/videojs-resolution-switcher.css" rel="stylesheet">
    <link href="/css/videojs-overlay.css" rel="stylesheet">
    <link rel="shortcut icon" href="/favicon.ico">

    <title>
        AngelThump
    </title>

    <style type="text/css">
        html {
            margin: 0;
            padding: 0;
            background: #000000;
            overflow: hidden;
        }
        #player {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }
        .video-js.vjs-playing .vjs-tech {
            pointer-events: none;
        }
        .vjs-fullscreen.vjs-user-inactive {
            cursor: none;
        }
        .video-js .vjs-progress-control {
            visibility: hidden;
        }
        .video-js .vjs-remaining-time-display {
            visibility: hidden;
        }
    </style>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-98637299-1', 'auto');
      ga('send', 'pageview');

    </script>

</head>

<body>

    <video id=player class="video-js vjs-default-skin" autoplay controls preload="auto"></video>
    <script type="text/javascript" src="/js/video.min.js"></script>
    <script type="text/javascript" src="/js/videojs-resolution-switcher.js"></script>
    <script type="text/javascript" src="/js/videojs5-hlsjs-source-handler.js"></script>
    <script type="text/javascript" src="/js/videojs.logobrand.js"></script>
    <script type="text/javascript" src="/js/videojs-persistvolume.js"></script>
    <script type="text/javascript" src="//www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1"></script>
    <script type="text/javascript" src="/js/videojs-chromecast.min.js"></script>
    <script type="text/javascript" src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js"></script>
    <script type="text/javascript" src="//cdn.rawgit.com/feathersjs/feathers-client/v2.3.0/dist/feathers.js"></script>
    <script type="text/javascript" src="/js/videojs.ga.min.js"></script>
    <script type="text/javascript" src="/js/videojs-overlay.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>

    <script>
        var ifPatreon = false, channel = "<%= username %>".toLowerCase(), host = 'https://angelthump.com', socket, requestTime = 1000, lastKnownServer = localStorage.getItem('server');
        var sources = [{
            type: "application/x-mpegURL",
            src: "https://nyc-hub.angelthump.com/hls/" + channel + "/index.m3u8",
            label: 'US'
        },{
            type: "application/x-mpegURL",
            src: "https://ams1.angelthump.com/hls/" + channel + "/index.m3u8",
            label: 'EU1'
        },{
            type: "application/x-mpegURL",
            src: "https://ams2.angelthump.com/hls/" + channel + "/index.m3u8",
            label: 'EU2'
        }, {
            type: "application/x-mpegURL",
            src: "https://nyc-patreon.angelthump.com/hls/" + channel + "/index.m3u8",
            label: 'PATREON'
        }];

        var options = {
            errorDisplay: false,
            html5: {
                hlsjsConfig: {
                    debug: false
                }
            },
            chromecast: {
                appId: '50E3A992',
                metadata: {
                    title: channel + 's stream',
                    subtitle: 'subtitle'
                }
            },
            plugins: {
                videoJsResolutionSwitcher: {
                    default: 'US',
                    dynamicLabel: true
                }
            }
        };

        var player = videojs('player', options, function() {
            this.ga();
        });
        connect();
        if(lastKnownServer == null || (lastKnownServer != 'US' && lastKnownServer != 'PATREON' && lastKnownServer != 'EU1' && lastKnownServer != 'EU2')) {
            lastKnownServer = 'US';
        }
        player.updateSrc(sources);
        player.currentResolution(lastKnownServer);


        player.on("pause", function() {
            socket.disconnect();
            player.one("play", function() {
                player.updateSrc(sources);
                player.currentResolution(lastKnownServer);
                connect();  
            });
        });

        player.on("resolutionchange", function() {
            if (player.currentResolution().label == 'PATREON') {
                checkPatreon();
            } else {
                lastKnownServer = player.currentResolution().label;
                localStorage.setItem('server', lastKnownServer);
            }
        })

        
        player.overlay({
          overlays: [{

            // This overlay appears at 3 seconds and disappears at 15 seconds.
            start: 0,
            end: 7,
            content: "<a href='https://www.patreon.com/angelthump' target='_blank'><img src='/assets/patreon-overlay.png'></a>",
            align: "bottom"
          }, {

            // This overlay will appear when the "custom1" event is triggered and
            // disappear when the "custom2" event is triggered.
            start: 'pause',
            end: 'playing',
            content: "<a href='https://www.patreon.com/angelthump' target='_blank'><img src='/assets/patreon-overlay.png'></a>",
            align: "bottom"
          }]
        });

        axios.get("https://angelthump.com/api/" + channel)
        .then(function(result) {    
            player.poster(result.data.poster);
        })
        .catch(function(error) {
            player.poster("https://angelthump.com/assets/default_offline.jpg");
        });

        player.logobrand({
            image: "https://angelthump.com/assets/patreon.png",
            destination: "https://patreon.com/angelthump"
        });

        function retry() {
            setTimeout(function() {
                player.src(sources);

                if (requestTime < 16000) {
                    requestTime = requestTime * 2;
                }

                if (player.readyState() != 0) {
                    player.loadingSpinner.show();
                }

            }, requestTime);
        }

        player.on('error', function(e) {
            if (player.error().code == 2) {
                player.loadingSpinner.hide();
                player.error(null);
                retry();
            }
        });

        player.persistvolume({
            namespace: "volume"
        });

        function connect() {
            socket = io(host, {
                transports: ['websocket']
            });
            socket.on('connect', function() {
                socket.emit('channel', channel);
            });
        }

        socket.on('reload', function (argUsername) {
            if(channel.toLowerCase() == argUsername.toLowerCase()) {
                location.reload();
            }
        });

        socket.on('redirect', function (argUsername, url) {
            if(channel.toLowerCase() == argUsername.toLowerCase()) {
                window.location = url;
            }
        });

        function checkPatreon() {
            var app = feathers()
                .configure(feathers.socketio(socket))
                .configure(feathers.hooks())
                .configure(feathers.authentication({
                    storage: window.localStorage
                }));
            app.authenticate()
            .then(response => {
                console.log('Authenticated!');
                // By this point your accessToken has been stored in
                // localstorage
                return app.passport.verifyJWT(response.accessToken);
            })
            .then(payload => {
                return app.service('users').get(payload.userId);
            })
            .then(user => {
                app.set('user', user);
                var user = app.get('user');
                ifPatreon = user.ifPatreon;
                if (ifPatreon) {
                    localStorage.setItem('server', 'PATREON');
                    lastKnownServer = player.currentResolution().label;
                } else {
                    player.currentResolution('US');
                    alert("You are not a patreon. If you are, please PM Overpowered on the destiny.gg chat or pm me on Patreon");
                }
            })
            .catch(function(error){
                player.currentResolution('US');
                alert("Login @ AngelThump.com then try again!");
                console.error('Error authenticating!', error);
            });

            // If the transport changes, you have to call authenticate() again.
            socket.io.engine.on('upgrade', function(transport) {
                console.log('transport changed');
                app.authenticate();
            });
        }

    </script>
</body>
</html>