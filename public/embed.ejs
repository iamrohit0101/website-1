<!DOCTYPE HTML>
<html>

<head>
    <link href="/css/password.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/errors.css">
	<link href="/css/embed.min.css" rel="stylesheet">
    <link href="/css/video-js.min.css" rel="stylesheet">
    <link href="/css/videojs-chromecast.min.css" rel="stylesheet">
    <link href="/css/videojs.logobrand.min.css" rel="stylesheet">
    <link href="/css/videojs-resolution-switcher.min.css" rel="stylesheet">
    <link href="/css/videojs-overlay.min.css" rel="stylesheet">
    <link rel="shortcut icon" href="/favicon.ico">

    <title>
        AngelThump
    </title>
</head>

<body>
    <div id="password-page" class="password-page" style="display: none;">
      <a href="/">
        <img src="/assets/small_logo.png" />
      </a>
      <div class="error" id="error" style="display: none; text-align: center;">
        Wrong Password! Please try again!
      </div>
      <div id="form" class="form">
        <form id="password-form" onsubmit="return false">
          <input id="streampassword" type="password" name="password" placeholder="enter the stream password"/>
          <button type="submit" id="submit">Submit</button>
        </form>
      </div>
    </div>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-98637299-1', 'auto');
      ga('send', 'pageview');

    </script>
    
    <video id=player class="video-js vjs-default-skin" autoplay controls preload="auto"></video>
    <script type="text/javascript" src="/js/dep/cast_sender.js?loadCastFramework=1"></script>
    <script type="text/javascript" src="/js/dep/video.min.js"></script>
    <script type="text/javascript" src="/js/dep/videojs-resolution-switcher.min.js"></script>
    <script type="text/javascript" src="/js/dep/videojs5-hlsjs-source-handler.min.js"></script>
    <script type="text/javascript" src="/js/dep/videojs.logobrand.js"></script>
    <script type="text/javascript" src="/js/dep/videojs-persistvolume.js"></script>
    <script type="text/javascript" src="/js/dep/videojs-chromecast.min.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.slim.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/core-js/2.4.1/core.min.js"></script>
    <script type="text/javascript" src="/js/dep/feathers.min.js"></script>
    <script type="text/javascript" src="/js/dep/videojs.ga.min.js"></script>
    <script type="text/javascript" src="/js/dep/videojs-overlay.min.js"></script>
    <script type="text/javascript" src="//unpkg.com/axios/dist/axios.js"></script>
    <script type="text/javascript">
        var poster, socket, host = 'https://api.angelthump.com', channel = "<%= username %>".toLowerCase(), paywall = false;

        axios.get("https://api.angelthump.com/" + channel)
        .then(function(result) {
            poster = result.data.poster;
            if(result.data.passwordProtected) {
                document.getElementById("password-page").style.display = 'block';
                document.getElementById("player").style.display = 'none';
                paywall = result.data.paywall;
            } else {
            	if(result.data.paywall) {
            		paywallCheck();
            	} else {
            		launchPlayer();
            	}
            }
        });

        document.getElementById("submit").addEventListener("click", function(){
            axios.post('/checkPassword', {
                streamname: channel,
                password: document.getElementById("streampassword").value
            })
            .then(function (response) {
                if(response.data.result) {
                    document.getElementById("password-page").style.display = 'none';
                    document.getElementById("player").style.display = 'block';
                    if(paywall) {
            			paywallCheck();
	            	} else {
	            		launchPlayer();
	            	}
                } else {
                    document.getElementById("error").style.display = 'block';
                }
            })
          });

        function launchPlayer() {
            var requestTime = 1000, lastKnownServer = localStorage.getItem('server');
            var sources = [{
                type: "application/x-mpegURL",
                src: "https://nyc-hub.angelthump.com/hls/" + channel + "/index.m3u8",
                label: 'NA'
            }/*,{
                type: "application/x-mpegURL",
                src: "https://ams1.angelthump.com/hls/" + channel + "/index.m3u8",
                label: 'EU'
            }*/,{
                type: "application/x-mpegURL",
                src: "https://nyc-patreon.angelthump.com/hls/" + channel + "/index.m3u8",
                label: 'US-EAST-PATREON'
            },{
                type: "application/x-mpegURL",
                src: "https://sfo1.angelthump.com/hls/" + channel + "/index.m3u8",
                label: 'US-WEST-PATREON'
            },{
                type: "application/x-mpegURL",
                src: "https://eu-patreon.angelthump.com/hls/" + channel + "/index.m3u8",
                label: 'EU-PATREON'
            }];

            var options = {
                errorDisplay: false,
                html5: {
                    hlsjsConfig: {
                        debug: false
                    }
                },
                plugins: {
                    videoJsResolutionSwitcher: {
                        default: 'NA',
                        dynamicLabel: true
                    }
                },
                chromecast: {
                    appId: '50E3A992',
                    metadata: {
                        title: channel + 's stream',
                        subtitle: 'subtitle'
                    }
                }
            };

            var player = videojs('player', options, function() {
                this.ga();
            });
            player.poster(poster);
            connect();
            if(lastKnownServer == null || (lastKnownServer != 'NA' && lastKnownServer != 'US-WEST-PATREON' && lastKnownServer != 'EU-PATREON' && lastKnownServer != 'US-EAST-PATREON' && lastKnownServer != 'EU')) {
                lastKnownServer = 'NA';
            }
            player.updateSrc(sources);
            player.currentResolution(lastKnownServer);


            player.on("pause", function() {
                if(scoket.connected) {
                    socket.disconnect();
                }
                player.one("play", function() {
                    connect();
                    player.updateSrc(sources);
                    player.currentResolution(lastKnownServer); 
                });
            });

            player.on("resolutionchange", function() {
                if(!socket.connected) {
                    connect();
                }
                player.loadingSpinner.show();
                if (player.currentResolution().label == 'US-EAST-PATREON' || player.currentResolution().label == 'EU-PATREON' || player.currentResolution().label == 'US-WEST-PATREON') {
                    checkPatreon();
                } else {
                    lastKnownServer = player.currentResolution().label;
                    localStorage.setItem('server', lastKnownServer);
                }
            })

            player.overlay({
              overlays: [{
                start: 0,
                end: 7,
                content: "<a href='https://www.patreon.com/angelthump' target='_blank'><img src='/assets/patreon-overlay.png'></a>",
                align: "bottom"
              }, {
                start: 'pause',
                end: 'playing',
                content: "<a href='https://www.patreon.com/angelthump' target='_blank'><img src='/assets/patreon-overlay.png'></a>",
                align: "bottom"
              }]
            });

            player.logobrand({
                image: "https://angelthump.com/assets/patreon.png",
                destination: "https://patreon.com/angelthump"
            });

            player.on('error', function(e) {
                if (player.error().code == 2) {
                    player.loadingSpinner.hide();
                    player.error(null);
                    retry();
                }
                if(socket.connected) {
                    //socket.disconnect();
                }
            });

            player.persistvolume({
                namespace: "volume"
            });

            function retry() {
                setTimeout(function() {
                    player.src(sources);
                    if (requestTime < 16000) {
                        requestTime = requestTime * 2;
                    }
                }, requestTime);
            }

            socket.on('reload', function (argUsername) {
            	console.log("fired");
            if(channel.toLowerCase() == argUsername.toLowerCase()) {
                location.reload();
                }
            });

            socket.on('redirect', function (argUsername, url) {
                if(channel.toLowerCase() == argUsername.toLowerCase()) {
                    window.location = url;
                }
            });


            function checkPatreon() {
                var login = io('https://angelthump.com', {
                    transports: ['websocket']
                });
                var app = feathers()
                    .configure(feathers.socketio(login))
                    .configure(feathers.hooks())
                    .configure(feathers.authentication({
                        storage: window.localStorage
                    }));
                app.authenticate()
                .then(response => {
                    console.log('Authenticated!');
                    return app.passport.verifyJWT(response.accessToken);
                })
                .then(payload => {
                    return app.service('users').get(payload.userId);
                })
                .then(user => {
                    app.set('user', user);
                    var user = app.get('user');
                    if (user.ifPatreon) {
                        localStorage.setItem('server', player.currentResolution().label);
                        lastKnownServer = player.currentResolution().label;
                    } else {
                        player.currentResolution('NA');
                        alert("You are not a patreon. If you are, please PM Overpowered on the destiny.gg chat or pm me on Patreon");
                    }
                })
                .catch(function(error){
                    player.currentResolution('NA');
                    window.location = 'https://angelthump.com/login';
                    console.error('Error authenticating!', error);
                });

                login.io.engine.on('upgrade', function(transport) {
                    console.log('transport changed');
                    app.authenticate();
                });
            }
        }

        function paywallCheck() {
            var login = io('https://angelthump.com', {
                transports: ['websocket']
            });
            var app = feathers()
                .configure(feathers.socketio(login))
                .configure(feathers.hooks())
                .configure(feathers.authentication({
                    storage: window.localStorage
                }));
            app.authenticate()
            .then(response => {
                console.log('Authenticated!');
                return app.passport.verifyJWT(response.accessToken);
            })
            .then(payload => {
                return app.service('users').get(payload.userId);
            })
            .then(user => {
                app.set('user', user);
                var user = app.get('user');

                var userDate = new Date(user.createdAt);
                var userMillis = userDate.getTime();

                var dateNow = new Date();
                var dateMillis = dateNow.getTime();

                var difference = dateMillis - userMillis;
                difference = (difference/1000)/60; 

                if(difference >= 10 || user.ifPatreon) {
                	launchPlayer();
                } else {
                	alert("Account is not old enough (10minutes). Become a $5 patron to override");
                	window.location = 'https://www.youtube.com/watch?v=Ag0MLEl3UMg';
                }
            })
            .catch(function(error){
                window.location = 'https://angelthump.com/login';
                console.error('Error authenticating!', error);
            });

            login.io.engine.on('upgrade', function(transport) {
                console.log('transport changed');
                app.authenticate();
            });
        }

        function connect() {
            socket = io(host, {
                transports: ['websocket']
            });
            socket.on('connect', function() {
                socket.emit('channel', channel);
            });
        }
    </script>
</body>
</html>